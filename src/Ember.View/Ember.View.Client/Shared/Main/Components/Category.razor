<ul class="filter-ul">

    @foreach (var link in links)
	{
        <li>
            <a @onclick="async () => await SelectedLinkInternal(link)"
               class="@(link.Active ? "active" : null)">
                <span>@link.Text</span>
            </a>
        </li>	 
	}
</ul>

@code {
    [Parameter]
    public object CurrentCategory { get; set; }

    [Parameter]
    public Dictionary<string, object> Links { get; set; }

    [Parameter]
    public EventCallback<object> SelectedLink { get; set; }

    List<LinkModel> links;

    protected override void OnParametersSet()
    {
        LoadPages();
    }

    private async Task SelectedLinkInternal(LinkModel link)
    {
        if (link.Active)
        {
            return;
        }

        await SelectedLink.InvokeAsync(link.Category);
    }

    private void LoadPages()
    {
        links = new List<LinkModel>();

        foreach (var key in Links.Keys)
        {
            links.Add(new LinkModel(key, Links[key])
            {
                Active = CurrentCategory.Equals(Links[key])
            });
        }
    }

    class LinkModel
    {
        public LinkModel(string text, object сategory)
        {
            Category = сategory;
            Text = text;
        }

        public string Text { get; set; }

        public object Category { get; set; }

        public bool Active { get; set; } = false;
    }
}
