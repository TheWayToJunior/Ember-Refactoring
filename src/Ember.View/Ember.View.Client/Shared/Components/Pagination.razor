<div aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        @foreach (var page in pages)
        {
            <li class="page-item @(page.Enable ? null : "disabled") @(page.Active ? "disabled" : null )" 
                @onclick="async () => await SelectedPageInternal(page)">
                <a class="page-link">@(page.Text)</a>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter]
    public int CurrentPage { get; set; }

    [Parameter]
    public int Range { get; set; }

    [Parameter]
    public int PageQuantity { get; set; }

    [Parameter]
    public EventCallback<int> SelectedPage { get; set; }

    private List<PageModel> pages;

    protected override void OnParametersSet()
    {
        LoadPages();
    }

    private async Task SelectedPageInternal(PageModel page)
    {
        if (page.Number == CurrentPage)
            return;

        if (!page.Enable)
            return;

        await SelectedPage.InvokeAsync(page.Number);
    }

    private void LoadPages()
    {
        pages = new List<PageModel>();

        pages.Add(new PageModel(CurrentPage - 1, "Назад") { Enable = CurrentPage != 1 });

        for (int i = 1; i <= PageQuantity; i++)
        {
            if (i >= CurrentPage - Range + 1 && i <= CurrentPage + Range)
                pages.Add(new PageModel(i) { Active = CurrentPage == i });
        }

        pages.Add(new PageModel(CurrentPage + 1, "Далее") { Enable = CurrentPage != PageQuantity });
    }

    class PageModel
    {
        public PageModel(int page)
            : this(page, page.ToString())
        {

        }

        public PageModel(int page, string text)
        {
            Number = page;
            Text = text;
        }

        public int Number { get; set; }

        public string Text { get; set; }

        public bool Active { get; set; } = false;

        public bool Enable { get; set; } = true;
    }
}
