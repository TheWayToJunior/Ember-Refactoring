@inject HttpClient http

@if (showError)
{
    <div class="alert alert-danger" role="alert">
        <p class="mb-0">@responseString</p>
    </div>
}

<EditForm Model="bind" OnValidSubmit="@(async () => await Bind())">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="exampleInputPassword1">Укажите номер лицевого сцета</label>
        <input type="text" class="form-control" id="exampleInputPassword1" placeholder="Номер счета" @bind="@bind.Number">
        <ValidationMessage For="@(() => bind.Number)" />
    </div>

    <button type="submit" class="btn btn-primary">Привязать</button>
</EditForm>


@code 
{
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter]
    public string Email { get; set; }

    string responseString = "";
    bool showError = false;

    BindAccountInfo bind;

    protected override void OnInitialized()
    {
        bind = new BindAccountInfo 
        {
            Email = this.Email
        };
    }

    private async Task Bind()
    {
        var httpContent = new StringContent(JsonSerializer.Serialize(bind), Encoding.UTF8, "application/json");

        var httpResponse = await http.PostAsync("api/bindaccount", httpContent);

        if (httpResponse.IsSuccessStatusCode)
        {
            BlazoredModal.Close(ModalResult.Cancel());
        }
        else
        {
            responseString = await httpResponse.Content.ReadAsStringAsync();

            showError = true;
        }
    }
}
