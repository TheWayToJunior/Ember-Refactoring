@inject HttpClient http

@if (showInfo)
{
    <div class="alert alert-info" role="alert">
        <p class="mb-0">@responseString</p>
    </div>
}

<EditForm Model="message" OnValidSubmit="@(async () => await SendMessage())">
    <DataAnnotationsValidator />

    <div class="d-flex">
        <div class="form-group">
            <label class="sr-only" for="inlineFormInputName2">Имя пользователя</label>
            <input type="text" class="form-control mb-2 mr-sm-2" id="inlineFormInputName2" placeholder="Ваше имя"
                   @bind="message.UserName">
            <ValidationMessage For="@(() => message.UserName)" />
        </div>

        <div class="form-group ml-2">
            <label class="sr-only" for="inlineFormInputGroupUsername2">Email</label>
            <div class="input-group mb-2 mr-sm-2">
                <div class="input-group-prepend">
                    <div class="input-group-text">@@</div>
                </div>
                <input type="text" class="form-control" id="inlineFormInputGroupUsername2" placeholder="Ваш email"
                       @bind="message.Email">
            </div>
            <ValidationMessage For="@(() => message.Email)" />
        </div>
    </div>

    <div class="form-group">
        <textarea class="form-control" id="inputDescription" rows="5" style="resize:none;" placeholder="Сообщение"
                  @bind="message.TextBody"></textarea>
        <ValidationMessage For="@(() => message.TextBody)" />
    </div>

    @if (sending)
    {
        <button class="btn btn-primary" type="submit" disabled>
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Отправка...
        </button>
    }
    else
    {

        <button type="submit" class="btn btn-primary">Отправить</button>
    }
</EditForm>

@code {
    private SendMessage message = new SendMessage();

    string responseString;

    bool sending = false;
    bool showInfo = false;

    private async Task SendMessage()
    {
        sending = true;

        var httpContent = new StringContent(JsonSerializer.Serialize(message), Encoding.UTF8, "application/json");

        var httpResponse = await http.PostAsync("api/feedback", httpContent);

        responseString = await httpResponse.Content.ReadAsStringAsync();

        message.TextBody = string.Empty;

        showInfo = true;
        sending = false;
    }
}
